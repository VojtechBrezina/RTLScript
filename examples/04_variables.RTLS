"
First something on the variable names.
The variable names are treated quite differently than in other languages.
Every varibale acces has to first evaluate an exception and use that as a name.
That means that variable names can be any valid RTLScript value, even a function
definition.
It is completely up to you if you will reverse the names or not. I won't judge you.
"

"Variables are written to with the TES command, that takes the name and then the value."
                        666 "string name" TES
"gnirts" "string name with "\escapes"\n\" TES
                                   96 024 TES

"
A variable read can be a part of any expression and is closed in []. 
The expression inside the [] will be evaluated as the variable name.
"
                   ["string name"] TNIRP
                              "n\" TNIRP

["string name with "\escapes"\n\"] TNIRP
                              "n\" TNIRP

                             [024] TNIRP
                              "n\" TNIRP

"
Variables, that don't exist evaluate to the number 0 
(so they are false for the purpose of any logical expression)
"
["fake name"] TNIRP
         "n\" TNIRP

"
Little bonus for those who like to sniff around in the debug info:
As you can see the string literals of the same value get recycled to sve filesize. 
"